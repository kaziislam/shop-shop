{"version":3,"sources":["assets/spinner.gif","components/ProductItem/index.js","utils/helpers.js","utils/queries.js","utils/reducers.js","utils/actions.js","utils/GlobalState.js","components/ProductList/index.js","components/CategoryMenu/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","utils/auth.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","ProductItem","item","image","name","_id","price","quantity","React","createElement","className","Link","to","concat","alt","src","count","pluralize","QUERY_PRODUCTS","gql","_templateObject","_taggedTemplateLiteral","QUERY_CATEGORIES","_templateObject2","_templateObject3","QUERY_USER","_templateObject4","reducer","state","action","type","_objectSpread","products","_toConsumableArray","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","initialState","props","_objectWithoutProperties","_excluded","_useProductReducer","useReducer","_useProductReducer2","_slicedToArray","dispatch","console","log","Object","assign","useStoreContext","useContext","ProductList","_useStoreContext","_useStoreContext2","_useQuery","useQuery","loading","data","useEffect","length","filter","product","category","map","key","spinner","CategoryMenu","categoryData","onClick","id","Home","_useState","useState","_useState2","setCategory","Detail","useParams","currentProduct","setCurrentProduct","find","Fragment","description","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","role","aria-label","LOGIN","ADD_USER","AuthService","_classCallCheck","_createClass","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","removeItem","_regeneratorRuntime","Op","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","Login","email","password","formState","setFormState","_useMutation","useMutation","_useMutation2","login","handleFormSubmit","_asyncToGenerator","_callee","event","mutationResponse","_context","preventDefault","variables","Auth","t0","_x","apply","arguments","handleChange","_event$target","target","_defineProperty","onSubmit","htmlFor","placeholder","onChange","Signup","addUser","firstName","lastName","Nav","loggedIn","href","logout","OrderHistory","user","orders","order","parseInt","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","Router","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ab2094d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\n\nfunction ProductItem(item) {\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","export function pluralize(name, count) {\n  if (count === 1) {\n    return name\n  }\n  return name + 's'\n}\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import {useReducer} from 'react';\n\nimport {\n    UPDATE_PRODUCTS,\n    UPDATE_CATEGORIES,\n    UPDATE_CURRENT_CATEGORY\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n    switch (action.type) {\n        // if action type is the value of `UPDATE_PRODUCTS`, return a new state object with an updated products array\n        case UPDATE_PRODUCTS:\n            return {\n                ...state,\n                products: [...action.products],\n            };\n        // if action type value is the value of `UPDATE_CATEGORIES`, return a new state object with an updated categories array\n        case UPDATE_CATEGORIES:\n            return {\n                ...state,\n                categories: [...action.categories]\n            };\n            \n        case UPDATE_CURRENT_CATEGORY:\n            return {\n                ...state,\n                currentCategory: action.currentCategory\n            };\n        // if it's none of these actions, do not update state at all and keep things the same!\n        default:\n            return state;\n    }\n};\n\nexport function useProductReducer(initialState) {\n    return useReducer(reducer, initialState);\n}","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\"\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\"\n","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from \"./reducers\";\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n    const [state, dispatch] = useProductReducer({\n        products: [],\n        categories: [],\n        currentCategory: '',\n    });\n    // use this to confirm it works!\n    console.log(state);\n    return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n    return useContext(StoreContext);\n};\n\n\nexport { StoreProvider, useStoreContext};","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\n\nimport ProductItem from '../ProductItem';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport spinner from '../../assets/spinner.gif';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n  const { currentCategory } = state;\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products\n      });\n    }\n  }, [data, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      product => product.category._id === currentCategory)\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nfunction CategoryMenu() {\n\n  const [state, dispatch] = useStoreContext();\n  const { categories } = state;\n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch() \n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React, { useState } from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\n\nconst Home = () => {\n  const [currentCategory, setCategory] = useState(\"\");\n\n  return (\n    <div className=\"container\">\n      <CategoryMenu setCategory={setCategory} />\n      <ProductList currentCategory={currentCategory} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const products = data?.products || [];\n\n  useEffect(() => {\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n  }, [products, id]);\n\n  return (\n    <>\n      {currentProduct ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button>Add to Cart</button>\n            <button>Remove from Cart</button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport OrderHistory from './pages/OrderHistory';\n\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}